# Generated by Django 4.2.7 on 2025-09-30 22:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaintenanceTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(max_length=50, unique=True, verbose_name='ID тикета')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('critical', 'Критический')], default='medium', max_length=10, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('open', 'Открыт'), ('in_progress', 'В работе'), ('resolved', 'Решен'), ('closed', 'Закрыт')], default='open', max_length=15, verbose_name='Статус')),
                ('source', models.CharField(choices=[('api', 'API'), ('manual', 'Ручной'), ('system', 'Система')], default='api', max_length=10, verbose_name='Источник')),
                ('from_user', models.CharField(default='Система', max_length=200, verbose_name='От кого')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Назначен')),
            ],
            options={
                'verbose_name': 'Тикет техподдержки',
                'verbose_name_plural': 'Тикеты техподдержки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('is_working', models.BooleanField(default=False)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('message', models.CharField(max_length=255)),
                ('checked_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Статус сервиса',
                'verbose_name_plural': 'Статусы сервисов',
                'ordering': ['-checked_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Внутренний комментарий')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.maintenanceticket', verbose_name='Тикет')),
            ],
            options={
                'verbose_name': 'Ответ на тикет',
                'verbose_name_plural': 'Ответы на тикеты',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='SentNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('notification_type', models.CharField(choices=[('info', 'Информационное'), ('urgent', 'Срочное'), ('warning', 'Предупреждение'), ('success', 'Успех')], max_length=10, verbose_name='Тип уведомления')),
                ('recipient_type', models.CharField(choices=[('all', 'Все пользователи'), ('admins', 'Администраторы'), ('managers', 'Менеджеры'), ('workers', 'Работники'), ('specific', 'Конкретный пользователь')], max_length=10, verbose_name='Тип получателей')),
                ('specific_user_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID конкретного пользователя')),
                ('specific_user_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Имя конкретного пользователя')),
                ('is_urgent', models.BooleanField(default=False, verbose_name='Срочное уведомление')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='Время отправки')),
                ('read_count', models.IntegerField(default=0, verbose_name='Количество прочтений')),
                ('total_recipients', models.IntegerField(default=0, verbose_name='Общее количество получателей')),
                ('delivery_time', models.FloatField(default=0.0, verbose_name='Время доставки (секунды)')),
                ('sent_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Отправлено пользователем')),
            ],
            options={
                'verbose_name': 'Отправленное уведомление',
                'verbose_name_plural': 'Отправленные уведомления',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('link', models.URLField(verbose_name='Ссылка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
            ],
            options={
                'verbose_name': 'Методичка',
                'verbose_name_plural': 'Методички',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email адрес')),
                ('role', models.CharField(choices=[('ССК', 'ССК (Старший Строительный Контролер)'), ('ИКО', 'ИКО (Инженер Контроля Объектов)'), ('Прораб', 'Прораб (Производственный Работник)')], max_length=10, verbose_name='Роль')),
                ('message', models.TextField(blank=True, verbose_name='Персональное сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
            ],
            options={
                'verbose_name': 'Приглашение',
                'verbose_name_plural': 'Приглашения',
                'ordering': ['-created_at'],
            },
        ),
    ]
